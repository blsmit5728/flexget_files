variables: secretfile.yml
templates:
  my-deluge-tv:
    deluge:
      remove_at_ratio: yes
      port: 58846
      main_file_only: yes 
      username: bsmith
      password: '{? deluge.password ?}'
      ratio: 1.4
    set:
      queue_to_top: yes
      content_filename: "{{ tvdb_series_name|default(series_name)|replace('/', '_')|replace(':', ' -')|replace(',', '') }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name|replace('/', '_')|replace(':', ' -')|replace(',', '') }}{% endif %} - {{ quality }}"
      move_completed_path: "{? storage.library ?}/TvShows/{{ series_name|replace('/', '_')|replace(':', ' ') }}/{% if series_id_type == 'ep' %}Season {{ trakt_season|default(series_season) }}/{% endif %}"


  my-deluge-movie:
    deluge:
      remove_at_ratio: yes
      port: 58846
      main_file_only: yes 
      username: bsmith
      password: '{? deluge.password ?}'
      ratio: 3.0
    set:
      queue_to_top: yes
      content_filename: "{{ tmdb_name|replace('/', '_')|replace(':', ' ') }} ({{ tmdb_year }}) - {{ quality }}"
      move_completed_path: "{? storage.library ?}/Movies/{{ tmdb_name|replace('/', '_')|replace(':', ' ') }} ({{ tmdb_year }})"

  send-notify:
    notify:
      entries:
        title: "[{{task}}] - Download started"
        message: "[{{task}}] - Download started:\n
          {% if series_name is defined %}
          {% if trakt_series_slug is defined and trakt_season is defined and trakt_episode is defined %}
          [Show Link](https://trakt.tv/shows/{{ trakt_series_slug }}/seasons/{{ trakt_season }}/episodes/{{ trakt_episode }}|{{tvdb_series_name|d(series_name)}} - {{series_id}}{{tvdb_ep_name|d('')}})
          {% else %}
          {{tvdb_series_name|d(series_name)}} - {{series_id}} - {{tvdb_ep_name|d('')}}
          {% endif %}
          - {{quality}}
          {% elif imdb_name is defined %}
          {% if imdb_url is defined %}
          {{imdb_url}} {{imdb_name}} {{imdb_year}}
          {% else %}
          {{imdb_name}} {{imdb_year}}
          {% endif %}
          - {{quality}}
          {% else %}
          {{title}}
          {% endif %}"
        what: accepted
        via:
          #- slack:
          #    web_hook_url: '{? slack.url ?}'
          #    icon_emoji: tv
          - discord:
              web_hook_url: "{? discord.webhookurl ?}"
              avatar_url: "https://i.imgur.com/HbBXlsd.png"
              username: "Flexget"

  local-torrents:
    disable:
      - retry_failed
      - seen
      - seen_info_hash
    no_entries_ok: yes
    accept_all: yes
    content_sort:
      '*.rar': "/mnt/disk1/Downloads/completed/TvShows/"
    exec:
      on_exit:
        for_accepted: rm "{{location}}"

  tv-anchors:
    _tv_trakt_list_tv_shows: &tv-trakt-list-tv-shows
      account: '{? trakt_info.user_name ?}'
      list: TvShows
      strip_dates: yes
    _tv_series: &tv-series
      include: 
        - series-tvshows.yml
        - series-daily-shows.yml
        - series-fall-shows.yml
        - series-interesting.yml
        - series-moms-shows.yml
        - series-reality.yml
        - series-wife.yml
      configure_series: &tv-series-from
        from:
          inputs:
            - trakt_list:
                <<: *tv-trakt-list-tv-shows
                type: shows

  global:
    domain_delay:
      www.torrentleech.org: 10 seconds
      rss.torrentleech.org: 10 minutes
    free_space:
      path: '{? storage.library ?}'
      space: 10000
    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title} 
        - (duo|tri|quadri|tetra|penta|hexa|hepta|octa|ennea|deca)logy 
        - \b3-?D\b: {from: title}          
        - \bR5\b: {from: title}            
        - \bWEBSCR\b: {from: title}        
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title} 
        - "{C_P}": {from: title}
        - \bFRENCH\b: {from: title}
        - \bSPANiSH\b: {from: title}
        - \bGerman\b: {from: title}
        - \btrailer\b: {from: title}
        - \bSCR\b: {from: title}
        - TrTd TeaM: {from: title}
        - \[TNTVillage\]: {from: title}
        - \[facepalm\]: {from: title}
        - \bASAP\b: {from: title}
        - \MULTi: {from: title}
        - \bCasStudio\b: {from: title}
      accept:
        - \Pokemon.*.DUBBED\b: {from: title}
    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.m4v'
        - '*.mp4'
        - '*.rar'
        - '*.r0*'
        - '*.part0*'
      reject:
        - '*.m2ts'
        - 'password.txt'
        - '*.wmv'
    pathscrub: windows
    retry_failed:
      retry_time: 1 hour
      retry_time_multiplier: 2
      max_retries: 5
    verify_ssl_certificates: yes
    magnets: no
      
  tv-global:
    template: 
      - send-notify
    headers:
      User-Agent: "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36"
    inputs:
      - rss: { url: '{? tl.url ?}', silent: yes }
    #content_size:
    #  max: 8000
    #  min: 20
    exists_series:
      path: ['{? storage.library ?}/TvShows/','{? storage.staging ?}/TvShows']
      allow_different_qualities: no
    thetvdb_lookup: yes
    # expected to need this.. API KEY
    make_rss: /home/bsmith/flexget_rss.rss
    trakt_lookup:
      account: '{? trakt_info.user_name ?}' 
      username: '{? trakt_info.user_name ?}'
    content_sort:
      '*.rar': '{? storage.complete ?}/TvShows/'
    exec:
      on_output:
        for_accepted: wget "{{url}}" -P /home/bsmith/Dropbox/torrents/TvShows/

    
  movie-global:
    template: 
      - send-notify
    inputs:
      - rss: { url: '{? tl.url ?}', silent: yes }
    archive: [movies]
    #content_size:
    #  max: 20000
    #  min: 1000
    exists_movie:
      path: ['{? storage.library ?}/Movies/','{? storage.library ?}/Kids/','{? storage.staging ?}/Movies/']
      allow_different_qualities: no
    tmdb_lookup: yes
    imdb_lookup: yes
    trakt_lookup:
      account: '{? trakt_info.user_name ?}'
      username: blsmit5728
    content_sort:
      '*.rar': '{? storage.complete ?}/Movies/'
    exec:
      on_output:
        for_accepted: wget "{{url}}" -P /home/bsmith/Dropbox/torrents/movies/

  movies-discover:
    discover:
      from:
        - torrentleech:
            rss_key: '{? tl.rss ?}'
            username: '{? tl.user_name ?}'
            password: '{? tl.password ?}'
            category: ['HDRip', 'BlurayRip', 'DVDRip/DVDScreener', 'DVD-R', 'Documentaries']
        - flexget_archive: [movies]
      what: [filler: yes]

  movies-queued:
    list_match:
      from:
        - movie_list: movies_2018    
      single_match: no
    list_remove:
      - trakt_list:
          account: '{? trakt_info.user_name ?}'
          username: '{? trakt_info.user_name ?}'
          list: Movie_Queue
          type: movies
    list_add:
      - trakt_list:
          account: '{? trakt_info.user_name ?}'
          username: '{? trakt_info.user_name ?}'
          list: watchlist
          type: movies
tasks:
  tv-my-shows:
    headers:
      User-Agent: "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36"
    priority: 5
    include: [ series-tvshows.yml ]
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{? trakt_info.user_name ?}'
          account: '{? trakt_info.user_name ?}'
          list: TvShows   
          type: shows
      settings:
        timeframe: 1 hours 
        target: 720p+
        quality: 480p+

  #clean-movie-queue:
  #  priority: 90
  #  template: no_global
  #  disable:
  #    - seen
  #    - seen_info_hash
  #    - seen_movies
  #  accept_all: yes
  #  filesystem:
  #    path: /mnt/disk1/Library/Movies/
  #    recursive: no
  #    retrieve: dirs 
  #  imdb_lookup: yes
  #  trakt_lookup:
  #    account: '{? trakt_info.user_name ?}'
  #    username: '{? trakt_info.user_name ?}'
  #  tmdb_lookup: yes
  #  require_field: [movie_name, movie_year]
  #  list_match:
  #    from:
  #      - movie_list: movies_2018
  #    single_match: no
  #  list_remove:
  #    - trakt_list:
  #        account: '{? trakt_info.user_name ?}'
  #        username: '{? trakt_info.user_name ?}'
  #        list: Movie_Queue
  #        type: movies

  movies-1080p:
    priority: 110
    template: 
      - movie-global
      - movies-queued
    quality: 1080p+ bluray+ h264+ !mp3 !aac

  movies-720p:
    priority: 120
    template: 
      - movie-global
      - movies-queued
    quality: 720p+ bluray+ h264+ !mp3 !aac
    delay: 7 days

  #imdb-list-to-trakt:
  #  priority: 1
  #  template: no_global
  #  imdb_lookup: yes
  #  imdb_list:
  #    login: '{? imdb.login ?}'
  #    password: '{? imdb.password ?}'
  #    list: watchlist
  #  list_add:
  #    - movie_list: movies_2018
  #    - trakt_list:
  #        account: '{? trakt_info.user_name ?}'
  #        username: '{? trakt_info.user_name ?}'
  #        list: Movie_Queue
  #        type: movies
  #  list_clear:
  #    what:
  #      - imdb_list:
  #          login: '{? imdb.login ?}'
  #          password: '{? imdb.password ?}'
  #          list: watchlist
  #    phase: exit
  #  accept_all: yes

  trakt-list-to-movie-queue:
    priority: 2
    template: no_global
    trakt_list:
      username: '{? trakt_info.user_name ?}'
      account: '{? trakt_info.user_name ?}'
      list: Movie_Queue
      type: movies
    accept_all: yes
    list_add:
      - movie_list: movies_2018
  
  local-torrents-movie:
    priority: 200
    template:
      - my-deluge-movie
      - movie-global
    disable:
      - seen
      - seen_info_hash
      - configure_series
      - inputs
      - regexp
      - quality
    # To avoid warnings about non-functional input
    #filler: yes 
    # Mark movies as seen
    list_match:
      from:
        - movie_list: movies_2018
      single_match: no
    plugin_priority:
      exec: 0
    filesystem:
      path: ['{? storage.local ?}/movies/','{? storage.flexgetdl ?}/Movies/']
      regexp: '.*\.torrent$'
      recursive: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    list_remove:
      - trakt_list:
          account: '{? trakt_info.user_name ?}'
          username: '{? trakt_info.user_name ?}'
          list: Movie_Queue
          type: movies
    list_add:
      - trakt_list:
          account: '{? trakt_info.user_name ?}'
          username: '{? trakt_info.user_name ?}'
          list: watchlist
          type: movies

#Local Torrents
  local-torrents-tv:
    priority: 201
    template: 
      - local-torrents
        #- tv-global
      - send-notify
      - my-deluge-tv
    all_series:
      parse_only: yes
      assume_special: yes
      season_packs: yes
    #configure_series:
    trakt_lookup:
      username: '{? trakt_info.user_name ?}'
      account: '{? trakt_info.user_name ?}'
    plugin_priority:
      exec: 0
    filesystem:
      path: ['{? storage.local ?}/TvShows/','{? storage.flexgetdl ?}/TvShows']
      regexp: '.*\.torrent$'
      recursive: yes
      
    #trakt-fall-shows:
    #priority: 6
    ##include: [ series-fall-shows.yml ]
    #template: 
    #  - tv-global
    #set:
    #  label: tv-fall-shows
    #configure_series:
    #  from:
    #    trakt_list:
    #      username: '{? trakt_info.user_name ?}'
    #      account: '{? trakt_info.user_name ?}' 
    #      list: Fall Shows 
    #      type: shows
    #  settings:
    #    quality: hdtv+ 

  
