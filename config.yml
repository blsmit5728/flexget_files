secrets: secretfile.yml
templates:
  global:
    domain_delay:
      www.torrentleech.org: 10 seconds
      rss.torrentleech.org: 10 minutes
      bt-chat.com: 5 seconds
      torrentz.eu: 5 seconds
    if:
      - "'torrentleech' in url":
          deluge:
            #ratio: 1.4
            removeatratio: yes
            port: 58846
            main_file_only: yes 
            username: bsmith
            password: '{{ secrets.deluge.password }}'
      - "'torrentleech' not in url":
          deluge:
            username: bsmith
            password: '{{ secrets.deluge.password }}'
            ratio: 0.1
            removeatratio: yes
            port: 58846
            main_file_only: yes
    free_space:
      path: /mnt/disk1/
      space: 10000
    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title} 
        - (duo|tri|quadri|tetra|penta|hexa|hepta|octa|ennea|deca)logy 
        - \b3-?D\b: {from: title}          
        - \bR5\b: {from: title}            
        - \bWEBSCR\b: {from: title}        
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title} 
        - "{C_P}": {from: title}
        - \bFRENCH\b: {from: title}
        - \bSPANiSH\b: {from: title}
        - \bGerman\b: {from: title}
        - \btrailer\b: {from: title}
        - \bSCR\b: {from: title}
        - TrTd TeaM: {from: title}
        - \[TNTVillage\]: {from: title}
        - \[facepalm\]: {from: title}
        - \bASAP\b: {from: title}
        - \MULTi: {from: title}
        - \bCasStudio\b: {from: title}
    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.m4v'
        - '*.mp4'
        - '*.rar'
      reject:
        - '*.m2ts'
        - 'password.txt'
        - '*.wmv'
    pathscrub: windows
    retry_failed:
      retry_time: 1 hour
      retry_time_multiplier: 2
      max_retries: 5
    verify_ssl_certificates: no
    magnets: no
    slack:
      webhook-url: '{{secrets.slack.url}}'
      icon-emoji: tv
      text: "[{{task}}] - Download started:
        {% if series_name is defined %}
        {% if trakt_series_slug is defined and trakt_season is defined and trakt_episode is defined %}
        <https://trakt.tv/shows/{{ trakt_series_slug }}/seasons/{{ trakt_season }}/episodes/{{ trakt_episode }}|{{tvdb_series_name|d(series_name)}} - {{series_id}}{{tvdb_ep_name|d('')}}>
        {% else %}
        {{tvdb_series_name|d(series_name)}} - {{series_id}} - {{tvdb_ep_name|d('')}}
        {% endif %}
        - {{quality}}
        {% elif imdb_name is defined %}
        {% if imdb_url is defined %}
        {{imdb_url}} {{imdb_name}} {{imdb_year}}
        {% else %}
        {{imdb_name}} {{imdb_year}}
        {% endif %}
        - {{quality}}
        {% else %}
        {{title}}
        {% endif %}"
    #download: "/home/bsmith/Downloads/torrents/"
      
  tv-global:
    inputs:
      - rss: { url: '{{ secrets.tl.url }}', silent: yes }
      #- rss: { url: 'http://kickass.to/tv/?rss=1' , silent: yes }
    content_size:
      max: 8000
      min: 20
    exists_series:
      - "/mnt/disk1/Library/TvShows/"
      - "/mnt/disk1/Downloads/staging/TvShows"
    deluge:
      ratio: 1.4
    thexem:
      source: scene
      destination: tvdb
    thetvdb_lookup: yes
    trakt_lookup:
      account: '{{ secrets.trakt_info.user_name }}' 
      username: '{{ secrets.trakt_info.user_name }}'
    set:
      queuetotop: yes
      content_filename: "{{ tvdb_series_name|default(series_name)|replace('/', '_')|replace(':', ' -')|replace(',', '') }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name|replace('/', '_')|replace(':', ' -')|replace(',', '') }}{% endif %} - {{ quality }}"
      movedone: "/mnt/disk1/Library/TvShows/{{ series_name|replace('/', '_')|replace(':', ' ') }}/{% if series_id_type == 'ep' %}Season {{ trakt_season|default(series_season) }}/{% endif %}"
    content_sort:
      '*.rar': "/mnt/disk1/Downloads/completed/TvShows/"
    
    #pushbullet:
    #  apikey: '{{ secrets.pushb.apikey }}'
    #  device: '{{ secrets.pushb.device }}'
    #  title: "[Flexget] {{series_name}} {{series_id}}"
    #  body: "{{task}} - {{ tvdb_series_name|default(series_name) }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name }}{% endif %}\n{{ quality }}\nTorrent File: {{title}}"
    #  #url: "{% if trakt_series_url is defined and trakt_season is defined and trakt_episode is defined %}{{ trakt_series_url|replace('.','-')|replace(' ','-') }}/season/{{ trakt_season }}/episode/{{ trakt_episode }}{% endif %}"
    #  #url: "imdb:///title/{{"

  movie-global:
    inputs:
      - rss: { url: '{{ secrets.tl.url }}', silent: yes }
    if:
      - "has_field('category')":
          regexp:
            reject_excluding:
              - '^(HD|BDRip|DVDRip.DVDScreener|DVD-R|Documentaries)$': {from: category}
    archive: [movies]
    content_size:
      max: 15000
      min: 1000
    exists_movie:
      - "/mnt/disk1/Library/Movies/"
      - "/mnt/disk1/Downloads/staging/Movies/"
    tmdb_lookup: yes
    imdb_lookup: yes
    trakt_lookup:
      account: blsmit5728
      username: blsmit5728
    deluge:
      ratio: 3.0
    set:
      content_filename: "{{ tmdb_name|replace('/', '_')|replace(':', ' ') }} ({{ tmdb_year }}) - {{ quality }}"
      movedone: "/mnt/disk1/Library/Movies/{{ tmdb_name|replace('/', '_')|replace(':', ' ') }} ({{ tmdb_year }})"
    content_sort:
      '*.rar': "/mnt/disk1/Downloads/completed/Movies/"
    #pushbullet:
    #  apikey: '{{ secrets.pushb.apikey }}'
    #  device: '{{ secrets.pushb.device }}'
    #  title: "[Flexget] Movie Downloaded"
    #  body: "{{task}} - {{ imdb_name }} {{ imdb_year }} - {{ quality }}\nTorrent File: {{title}}"
    #  url: "imdb:///title/{{ imdb_id }}?src=mdot"

  movies-discover:
    discover:
      from:
        - torrentleech:
            rss_key: '{{ secrets.tl.rss }}'
            username: '{{ secrets.tl.user_name }}'
            password: '{{ secrets.tl.password }}'
            category: ['HD', 'BDRip', 'DVDRip', 'DVDR', 'Documentaries']
        - flexget_archive: [movies]
      what: [filler: yes]

  movies-queued:
    list_match:
      from:
        - movie_list: my_movies    
      single_match: no
    template: movies-discover
    disable:
      - seen_movies
    discover:
      what:
        - movie_list: my_movies
      from: [ filler: yes ]
    set:
      label: my-movies
    list_remove:
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: Movie_Queue
          type: movies
    list_add:
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: watchlist
          type: movies
tasks:
  tv-my-shows:
    priority: 5
    include: [ series-tvshows.yml ]
    template:
      - tv-global
    set:
      label: tv-my-shows
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: TvShows   
          type: shows
      settings:
        timeframe: 4 hours 
        target: 720p+ 
        quality: 480p+

  tv-interesting:
    priority: 6
    include: [ series-interesting.yml ] 
    template:
      - tv-global
    set:
      label: tv-interesting
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: Interesting
          type: shows
      settings:
        timeframe: 3 hours
        target: 720p+
        quality: 480p+

  tv-reality:
    priority: 7
    include: [ series-reality.yml ]
    template:
      - tv-global
    set:
      label: tv-reality
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: RealityTV   
          type: shows
      settings:
        timeframe: 3 hours
        target: hdtv+ dvdscr+        
        quality: 480p+ sdtv+             

  tv-laura:
    priority: 8
    include: [ series-wife.yml ]
    template:
      - tv-global
    set:
      label: tv-laura
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: '{{ secrets.trakt_info.user_name }}'
          list: Laura   
          type: shows
      settings:
        timeframe: 4 hours
        target: 480p+       
        quality: 360p+             
              
  clean-movie-queue:
    priority: 90
    template: no_global
    disable:
      - seen
      - seen_info_hash
      - seen_movies
    accept_all: yes
    filesystem:
      path: /mnt/disk1/Library/Movies/
      recursive: no
      retrieve: dirs 
    imdb_lookup: yes
    trakt_lookup:
      account: '{{ secrets.trakt_info.user_name }}'
      username: '{{ secrets.trakt_info.user_name }}'
    tmdb_lookup: yes
    require_field: [movie_name, movie_year]
    list_match:
      from:
        - movie_list: my_movies
      single_match: no
    list_remove:
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: Movie_Queue
          type: movies
  movies-1080p:
    priority: 110
    template: 
      - movie-global
      - movies-queued
    quality: 1080p+ bluray+ h264+ !mp3 !aac

  movies-720p:
    priority: 120
    template: 
      - movie-global
      - movies-queued
    torrent_alive:
      min_seeds: 5
    quality: 720p+ bluray+ h264+ !mp3 !aac
    delay: 7 days

  imdb-list-to-trakt:
    priority: 1
    template: no_global
    imdb_lookup: yes
    #list_match:
    #  from:
    imdb_list:
      login: '{{ secrets.imdb.login }}'
      password: '{{ secrets.imdb.password }}'
      list: watchlist
    #single_match: no
    list_add:
      - movie_list: my_movies
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: Movie_Queue
          type: movies
    accept_all: yes

  trakt-list-to-movie-queue:
    priority: 2
    template: no_global
    trakt_list:
      username: '{{ secrets.trakt_info.user_name }}'
      account: '{{ secrets.trakt_info.user_name }}'
      list: Movie_Queue
      type: movies
    accept_all: yes
    list_add:
      - movie_list: my_movies
   
  local-torrents-movie:
    priority: 200
    template:
      - movie-global
    disable:
      - seen
      - seen_info_hash
      - configure_series
      - inputs
      - exists_movie
      - seen_movies
      - regexp
      - content_size
      - torrent_alive
      - quality
    # To avoid warnings about non-functional input
    filler: yes 
    # Mark movies as seen
    list_match:
      from:
        - movie_list: my_movies
      single_match: no
    plugin_priority:
      exec: 0
    filesystem:
      path: '/home/bsmith/Dropbox/torrents/movies/'
      regexp: '.*\.torrent$'
      recursive: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    set:
      label: local-movies
    list_remove:
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: Movie_Queue
          type: movies
    list_add:
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: watchlist
          type: movies
  local-torrents-tv:
    priority: 201
    include:
      - series-interesting.yml  
      - series-reality.yml  
      - series-tvshows.yml  
      - series-wife.yml
    template:
      - tv-global
    disable:
      - seen
      - seen_info_hash
      - configure_series
    #- trakt_list
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive
    filler: yes # To avoid warnings about non-functional input
    trakt_lookup:
      username: '{{ secrets.trakt_info.user_name }}'
      account: '{{ secrets.trakt_info.user_name }}'
    all_series:
      parse_only: yes
    plugin_priority:
      exec: 0
    filesystem:
      path: '/home/bsmith/Dropbox/torrents/TvShows/'
      regexp: '.*\.torrent$'
      recursive: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    set:
      label: local-tv
    sequence:
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: TvShows   
              type: shows
              strip_dates: yes
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: Fall Shows   
              type: shows
              strip_dates: yes
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: Moms Shows   
              type: shows
              strip_dates: yes
      
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: Laura   
              type: shows
              strip_dates: yes
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: RealityTV   
              type: shows
              strip_dates: yes        
      - configure_series:
          settings:
            assume_special: true
          from:
            trakt_list:
              account: '{{ secrets.trakt_info.user_name }}'
              list: Interesting   
              type: shows
              strip_dates: yes                              
      
  trakt-fall-shows:
    priority: 6
    include: [ series-fall-shows.yml ]
    template: 
      - tv-global
    set:
      label: tv-fall-shows
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: Fall Shows 
          type: shows
      settings:
        timeframe: 2 hours
        target: 720p+ 
        quality: hdtv+ 
        propers: 2 hours

  trakt-moms-shows:
    priority: 6
    include: [ series-moms-shows.yml ]
    template: 
      - tv-global
    set:
      label: tv-mom
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: Moms Shows
          type: shows
      settings:
        timeframe: 2 hours
        target: 720p+ hdtv+ 
        quality: 360p+ tvrip+ 
        propers: 2 hours
  
  trakt-daily-shows:
    priority: 2
    include: [ series-daily-shows.yml ]
    template:
      - tv-global
    set:
      label: tv-daily
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          account: blsmit5728
          list: Daily
          type: shows
      settings:
        target: 720p+ webrip+
        timeframe: 12 hours
        quality: 360p+ tvrip+ 
        tracking: backfill
  
  alex-tv-shows:
    priority: 10
    template:
      - tv-global
    set:
      label: tv-alex
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.am_username }}'
          account: alexmcree
          list: watchlist
          type: shows
      settings:
        target: 720p+ webrip+
        timeframe: 12 hours
        quality: 360p+ tvrip+
 
  alex-imdb-list-to-trakt:
    priority: 1
    template: no_global
    imdb_lookup: yes
    imdb_list:
      login: '{{ secrets.imdb.am_login }}'
      password: '{{ secrets.imdb.am_password }}'
      list: watchlist
    list_add:
      - movie_list: my_movies
      - trakt_list:
          account: '{{ secrets.trakt_info.user_name }}'
          username: '{{ secrets.trakt_info.user_name }}'
          list: Movie_Queue
          type: movies
    accept_all: yes
