secrets: secretfile.yml
templates:
  global:
    pushbullet:
      apikey: '{{ secrets.pushb.apikey }}'
      device: '{{ secrets.pushb.device }}'
      title: "[Flexget] {{series_name}} {{series_id}}"
      body: "{{task}} - {% if trakt_series_url is defined %}{{trakt_series_url}}/season/{{trakt_season}}/episode/{{trakt_episode}}{% endif %}"
    #email:
    #  from: '{{ secrets.em.from }}'
    #  to: '{{ secrets.em.to }}'
    #  smtp_host: '{{ secrets.em.smtp_host }}'
    #  smtp_port: 587 
    #  smtp_username: '{{ secrets.em.smtp_username }}'
    #  smtp_password: '{{ secrets.em.smtp_password }}'
    #  smtp_tls: yes
    #  template: custom.template
    domain_delay:
      www.torrentleech.org: 10 seconds
      rss.torrentleech.org: 10 minutes
      bt-chat.com: 5 seconds
      torrentz.eu: 5 seconds
    if:
      - "'torrentleech' in url":
          deluge:
            ratio: 3.0
            removeatratio: yes
            port: 58846
      - "'torrentleech' not in url":
          deluge:
            ratio: 1.0
            removeatratio: yes
            port: 58846
    free_space:
      path: /mnt/disk1/
      space: 10000
    regexp:
      reject:
        - (s|d)ub(s|bed)?\b: {from: title} 
        - (duo|tri|quadri|tetra|penta|hexa|hepta|octa|ennea|deca)logy 
        - \b3-?D\b: {from: title}          
        - \bR5\b: {from: title}            
        - \bWEBSCR\b: {from: title}        
        - \bscreener\b: {from: title}
        - \bTS\b: {from: title}
        - \bCam\b: {from: title} 
        - "{C_P}": {from: title}
        - \bFRENCH\b: {from: title}
        - \btrailer\b: {from: title}
        - "SCR": {from: title}
    content_filter:
      require:
        - '*.avi'
        - '*.mkv'
        - '*.m4v'
        - '*.mp4'
        - '*.rar'
      reject:
        - '*.m2ts'
        - 'password.txt'
        - '*.wmv'
    pathscrub: windows
    retry_failed:
      retry_time: 1 hour
      retry_time_multiplier: 2
      max_retries: 5
    verify_ssl_certificates: no
    magnets: no
      
  tv-global:
    inputs:
      - rss: { url: '{{ secrets.tl.url }}', silent: yes }
      #- rss: { url: 'http://kickass.to/tv/?rss=1', silent: yes }
      #- rss: { url: 'http://www.torlock.com/television/rss.xml', silent: yes }  
      #- rss: { url: 'http://torrentz.eu/feed_verified?q=tv', silent: yes }      
      #- rss: { url: 'http://ezrss.it/feed/', silent: yes }                     
      #- rss: { url: 'http://showrss.karmorra.info/feeds/all.rss', silent: yes } 
      #- rss: { url: 'http://rss.bt-chat.com/?group=3', silent: yes }           
      #- rss: { url: 'https://rss.thepiratebay.se/208', silent: yes }          
      #    include: 
      #- series.yml
    content_size:
      max: 8000
      min: 20
    exists_series:
      - "/mnt/disk1/Library/TvShows/"
      - "/home/bsmith/Downloads/staging/TvShows"
    #thetvdb_lookup: yes
    trakt_lookup: yes
    set:
      content_filename: "{{ series_name|replace('/', '_')|replace(':', ' ') }} - {{ trakt_ep_id|default(series_id) }}{% if trakt_ep_name|default(False) %} - {{ trakt_ep_name|replace('/', '_')|replace(':', ' -') }}{% endif %} - {{ quality }}"
      #content_filename: "{{ series_name|replace('/', '_')|replace(':', ' ') }} - {{ trakt_ep_id|default(series_id) }}{% if trakt_ep_name|default(False) %} - {{ trakt_ep_name|replace('/', '_')|replace(':', ' -') }}{% endif %} - {{ quality }}"
      movedone: "/mnt/disk1/Library/TvShows/{{ series_name|replace('/', '_')|replace(':', ' ') }}/{% if series_id_type == 'ep' %}Season {{ trakt_season|default(series_season) }}/{% endif %}"
      label: tv
    content_sort:
      '*.rar': "/home/bsmith/Downloads/completed/TvShows/"

  movie-global:
    inputs:
      - rss: { url: '{{ secrets.tl.url }}', silent: yes }
      #- rss: { url: 'http://kickass.to/movies/genre/news/?rss=1', silent: yes }
    content_size:
      max: 15000
      min: 500
    exists_movie:
      - "/mnt/disk1/Library/Movies/"
      - "/home/bsmith/Downloads/staging/Movies/"
    imdb_required: yes
    trakt_lookup: yes
    deluge:
      content_filename: "{{ imdb_name|replace('/', '_')|replace(':', ' ') }} ({{ imdb_year }}) - {{ quality }}"
      movedone: "/mnt/disk1/Library/Movies/{{ imdb_name|replace('/', '_')|replace(':', ' ') }} ({{ imdb_year }})"
      label: movie
    content_sort:
      '*.rar': "/home/bsmith/Downloads/completed/Movies/"
    
      #  music-global:
      #    include:
      #     - private/email.yml

  movies-discover:
    discover:
      from:
        - torrentleech:
            rss_key: '{{ secrets.tl.rss }}'
            username: '{{ secrets.tl.user_name }}'
            password: '{{ secrets.tl.password }}'
            category: ['BDRip', 'HD']
        - flexget_archive: yes
        #- torrentz:
        #    reputation: verified
        #    extra_terms: "movie* hd"
        #- piratebay:
        #    category: "highres movies"
        #    sort_by: seeds
      what:  
        - filler: yes
      #interval: 2 hours

  movies-queued:
    movie_queue: yes
    template: movies-discover
    disable_plugin:
      - seen_movies
    discover:
      what:
        - emit_movie_queue: yes
      from: 
        - filler: yes
    set:
      label: my-movies
    trakt_remove:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      list: Movie_Queue
    trakt_add:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      list: watchlist

tasks:
  tv-my-shows:
    priority: 5
    include: [ series_tvshows.yml ]
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: TvShows   
      settings:
        target: 720p+ dvdscr+
        timeframe: 1 days
        quality: 480p+ webrip+

  tv-interesting:
    priority: 6
    #include: [ series_interesting.yml ] #NOTHING IN HERE YET.
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: Interesting   
      settings:
        target: 720p+ dvdscr+
        timeframe: 3 days
        quality: 480p+ webrip+

  tv-reality:
    priority: 7
    include: [ series_reality.yml ]
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: RealityTV   
      settings:
        target: hdtv+ dvdscr+
        timeframe: 3 days
        quality: 480p+ webrip+             

  tv-laura:
    priority: 8
    #include: [ series_wife.yml ]
    template:
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: Laura   
      settings:
        target: 720p+ dvdscr+
        timeframe: 2 days
        quality: 480p+ webrip+             
              
  movies_1080p:
    priority: 110
    template: 
      - movie-global
      - movies-queued
    quality: 1080p+ bluray+ h264+ !mp3 !aac

  movies_720p:
    priority: 120
    template: 
      - movie-global
      - movies-queued
    torrent_alive:
      min_seeds: 5
    quality: 720p+ bluray+ h264+ !mp3 !aac
    delay: 7 days

  trakt_list_to_queue:
    priority: 3
    template: no_global
    trakt_list:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      custom: Movie_Queue
    accept_all: yes
    queue_movies: yes
  
  google_music_sync:
    priority: 1
    disable_builtins: [seen, seen_info_hash]
    template: 
      - no_global # None of the global templates make sense here
     #- music-global
    find:
      path: '/home/bsmith/Dropbox/Music/to_sync/'
      regexp: '.*\.(mp3|flac|m4a|ogg)$'
      recursive: yes
    accept_all: yes
    exec:
      on_output:
        for_accepted: '"/home/bsmith/repos/gmusicapi-scripts/gmsync.py" -q -l -m "{{location}}" && rm "{{location}}"'

  local_torrents_movies:
    priority: 2
    template:
      - movie-global
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - configure_series
      - inputs
      - exists_movie
      - seen_movies
      - regexp
      - content_size
      - torrent_alive
      - quality
    # To avoid warnings about non-functional input
    filler: yes 
    # Mark movies as seen
    movie_queue: yes
    plugin_priority:
      exec: 0
    find:
      path: '/home/bsmith/Dropbox/torrents/Movies/'
      regexp: '.*\.torrent$'
      recursive: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    set:
      label: local-movies
    trakt_remove:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      list: Movie_Queue
    trakt_add:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      list: watchlist

  local_torrents_tv:
    priority: 2
    include:
     #- series_interesting.yml  
      - series_reality.yml  
      - series_tvshows.yml  
     #- series_wife.yml
    template:
      - tv-global
    disable_builtins: [seen, seen_info_hash]
    disable_plugin:
      - configure_series
      - trakt_list
      - inputs
      - exists_series
      - regexp
      - content_size
      - torrent_alive
    filler: yes # To avoid warnings about non-functional input
    all_series:
      parse_only: yes
    plugin_priority:
      exec: 0
    find:
      path: '/home/bsmith/Dropbox/torrents/TvShows/'
      regexp: '.*\.torrent$'
      recursive: yes
    exec:
      on_output:
        for_accepted: rm "{{location}}"
    accept_all: yes
    set:
      label: local-tv

  imdb_list_to_trakt:
    priority: 1
    template: no_global
    #interval: 2 hours
    imdb_list:
      user_id: ur34962140
      list: watchlist
    trakt_add:
      username: '{{ secrets.trakt_info.user_name }}'
      password: '{{ secrets.trakt_info.password }}'
      api_key: '{{ secrets.trakt_info.api_key }}'
      list: Movie_Queue
    accept_all: yes
    queue_movies: yes  

  trakt_fall_shows:
    priority: 6
    template: 
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: Fall Shows 
      settings:
        timeframe: 2 hours
        target: 720p+ 
        quality: hdtv+ 
        propers: 2 hours

  trakt_moms_shows:
    priority: 6
    template: 
      - tv-global
    configure_series:
      from:
        trakt_list:
          username: '{{ secrets.trakt_info.user_name }}'
          password: '{{ secrets.trakt_info.password }}'
          api_key: '{{ secrets.trakt_info.api_key }}'
          custom: Moms Shows 
      settings:
        timeframe: 2 hours
        target: hdtv+ 
        quality: hdtv+ 
        propers: 2 hours

    
#schedules:            
#  - tasks: [ 'tv-my-shows', 'tv-interesting', 'tv-reality', 'tv-laura', 'trakt_fall_shows','movies_1080p', 'movies_720p' ]
#    schedule:
#      minute: 3,18,33,48
#  - tasks: [ 'movies_1080p', 'movies_720p' ]
#    schedule:
#      minute: 30
#  - tasks: [ 'local_torrents_movies', 'google_music_sync', 'local_torrents_tv' ]  
#    schedule:
#      minute: 15
#  - tasks: [ 'trakt_list_to_queue', 'imdb_list_to_trakt' ]
#    schedule:
#      hour: 2

